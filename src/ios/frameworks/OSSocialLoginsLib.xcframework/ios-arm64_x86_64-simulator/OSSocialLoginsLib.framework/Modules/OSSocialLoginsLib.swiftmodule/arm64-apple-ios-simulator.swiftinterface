// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios15.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name OSSocialLoginsLib
import AuthenticationServices
import Foundation
@_exported import OSSocialLoginsLib
import Swift
import UIKit
import _Concurrency
public struct UserInfo : Swift.Encodable, Swift.Equatable {
  public static func == (a: OSSocialLoginsLib.UserInfo, b: OSSocialLoginsLib.UserInfo) -> Swift.Bool
  public func encode(to encoder: Swift.Encoder) throws
}
public protocol SocialLoginsProtocol {
  func callBackUserInfo(result: OSSocialLoginsLib.UserInfo?, error: Foundation.NSError?, callBackID: Swift.String)
}
extension Swift.String {
  public func decode<T>(string: Swift.String) -> T where T : Swift.Decodable
}
extension Swift.Encodable {
  public func encode<T>(object: T) -> Swift.String where T : Swift.Encodable
}
@objc public class SocialLoginsAppleController : ObjectiveC.NSObject, AuthenticationServices.ASAuthorizationControllerPresentationContextProviding {
  public init(delegate: OSSocialLoginsLib.SocialLoginsProtocol)
  @objc public func presentationAnchor(for controller: AuthenticationServices.ASAuthorizationController) -> AuthenticationServices.ASPresentationAnchor
  @objc public func authorizationController(controller: AuthenticationServices.ASAuthorizationController, didCompleteWithError error: Swift.Error)
  @objc deinit
}
extension AuthenticationServices.ASAuthorizationAppleIDCredential : OSSocialLoginsLib.AppleIDCredentialProtocol {
  public var userIdentifier: Swift.String? {
    get
  }
  public var givenName: Swift.String? {
    get
  }
  public var familyName: Swift.String? {
    get
  }
}
extension OSSocialLoginsLib.SocialLoginsAppleController : AuthenticationServices.ASAuthorizationControllerDelegate {
  @objc dynamic public func authorizationController(controller: AuthenticationServices.ASAuthorizationController, didCompleteWithAuthorization authorization: AuthenticationServices.ASAuthorization)
}
@objc open class SocialLoginsController : ObjectiveC.NSObject {
  public init(appleController: OSSocialLoginsLib.SocialLoginsAppleController, rootViewController: UIKit.UIViewController)
  public func loginApple(callbackID: Swift.String)
  public func loginGoogle(callbackID: Swift.String)
  @objc deinit
}
public protocol AppleIDCredentialProtocol {
  var userIdentifier: Swift.String? { get }
  var identityToken: Foundation.Data? { get }
  var email: Swift.String? { get }
  var givenName: Swift.String? { get }
  var familyName: Swift.String? { get }
}
